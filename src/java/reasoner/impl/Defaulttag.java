package reasoner.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import reasoner.tag;
import reasoner.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Ontology1494167488.owl#tag
 *
 * @version generated on Sun Nov 12 13:55:39 GMT+07:00 2017
 */
public class Defaulttag extends AbstractCodeGeneratorIndividual
         implements tag {

    public Defaulttag(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public Defaulttag() {
    }



    // Property http://www.owl-ontologies.com/Ontology1494167488.owl#includes

    public Collection getIncludes() {
        return getPropertyValuesAs(getIncludesProperty(), song.class);
    }


    public RDFProperty getIncludesProperty() {
        final String uri = "http://www.owl-ontologies.com/Ontology1494167488.owl#includes";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIncludes() {
        return getPropertyValueCount(getIncludesProperty()) > 0;
    }


    public Iterator listIncludes() {
        return listPropertyValuesAs(getIncludesProperty(), song.class);
    }


    public void addIncludes(song newIncludes) {
        addPropertyValue(getIncludesProperty(), newIncludes);
    }


    public void removeIncludes(song oldIncludes) {
        removePropertyValue(getIncludesProperty(), oldIncludes);
    }


    public void setIncludes(Collection newIncludes) {
        setPropertyValues(getIncludesProperty(), newIncludes);
    }
}
